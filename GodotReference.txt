### SOCKET.IO REFERENCE FOR DISPLAY END ###

[Create a New Room]
Event: create-room
    - gamemode (string with the name of the game)
Desc: Creates a new room and returns the room id.
Successful Return Event: created-room
    - roomcode (string of 4 letters)
Unsuccessful Return Event: create-room-failed
    - reason (string that contains a reason for failure)

[Kick Player]
Event: kick-player
    - id (id of the player. not currently in use)
    - reason (a string with the reason for being kicked)
        > default: 'You have been kicked'
Desc: Used to kick the player. Useful in case you want to remove a player or if a player tries to join
      in the middle of a game and they aren't the owner of the name.

[Player Joined]
Receive: player-joined
    - username (string with the username, please store on the godot)
    - id (a uuid that can be used to differentiate different users)
Desc: This event will be emitted when a player joins the room

[Player Left]
Receive: player-left
    - username (string witg the username so the username can be deleted from memory)
    - id (a uuid that can be used to differentiate different users)
Desc: Provides the game information about a player who left the room

[Send Prompts]
Event: send-prompts
    - prompts (list of objects that contain the prompts and prompt id)
        > ex: [{"prompt":"A disgusting name for a dog.", "id":1},{"prompt":"What you don't want to find in your bedroom closet.", "id:":2}]
    - players (a list of all of the player ids actively playing in the lobby. Just as a string, no arrays or objects)
        > ex: ["player1_id","player2_id","player3_id"]
Desc: Send prompts to players. This will start a prompt writing round.

[Receive Prompt Response]
Receive: prompt-reponse
    - response (the players response to the prompt)
    - prompt_id (the id of the prompt so it can be handled appropriately)
    - id (the player id so the origin of the response can be tracked during voting)
Desc: This is received when the player send a response to the server. This may not
      necassarily be the last message during the writing from the player.

[Player Finished Writing]
Receive: player-finished
    - id (the id of the player)
Desc: The purpose of this is to tell the display when a player has finished writing
      all of their responses. This indicated the final response has been submited.
      Useful for a countdown timer and visuals.